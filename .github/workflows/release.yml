name: Release

on:
  push:
    tags:
      - 'v*'

env:
  NODE_VERSION: '20'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build-release:
    name: Build Release Artifacts
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd backend && npm ci
          cd ../frontend && npm ci

      - name: Build applications
        run: |
          cd backend && npm run build
          cd ../frontend && npm run build

      - name: Create archive
        shell: bash
        run: |
          tar -czf fluxolab-${{ github.ref_name }}-${{ matrix.os }}.tar.gz \
            backend/dist \
            frontend/dist \
            package.json \
            README.md \
            docker-compose.yml \
            Dockerfile

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./fluxolab-${{ github.ref_name }}-${{ matrix.os }}.tar.gz
          asset_name: fluxolab-${{ github.ref_name }}-${{ matrix.os }}.tar.gz
          asset_content_type: application/gzip

  docker-release:
    name: Build Release Docker Images
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  update-changelog:
    name: Update Changelog
    runs-on: ubuntu-latest
    needs: [build-release, docker-release]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate changelog
        id: changelog
        run: |
          # Get commits since last tag
          git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD > changelog.md
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          cat changelog.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Update release description
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: '${{ needs.create-release.outputs.release_id }}',
              body: `## Changes in this Release\n\n${{ steps.changelog.outputs.changelog }}\n\n## Installation\n\n\`\`\`bash\n# Using Docker Compose\ndocker-compose up -d\n\n# Using Docker\ndocker run -d --name fluxolab ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}\n\`\`\`\n\n## Documentation\n\nFull documentation is available at: https://docs.fluxolab.com`
            })

  notify-release:
    name: Notify Release
    runs-on: ubuntu-latest
    needs: [update-changelog]
    steps:
      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          status: success
          channel: '#releases'
          text: |
            ðŸš€ New Release: ${{ github.ref_name }}
            
            Release URL: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref }}
            
            Docker Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        if: always()
