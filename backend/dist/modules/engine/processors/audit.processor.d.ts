import { Job } from 'bull';
export declare class AuditProcessor {
    private readonly logger;
    handleAuditEventLogging(job: Job<{
        tenantId: string;
        workspaceId?: string;
        runId?: string;
        actorType: string;
        actorId?: string;
        actorName?: string;
        action: string;
        entityType: string;
        entityId?: string;
        entityName?: string;
        oldValues?: any;
        newValues?: any;
        context?: any;
        ipAddress?: string;
        userAgent?: string;
        sessionId?: string;
        correlationId?: string;
        traceId?: string;
    }>): Promise<void>;
    handleConsentRequestProcessing(job: Job<{
        workspaceId: string;
        subjectId: string;
        subjectType: string;
        consentType: string;
        consentStatus: string;
        consentMethod: string;
        consentText?: string;
        ipAddress?: string;
        userAgent?: string;
    }>): Promise<void>;
    handleErasureRequestProcessing(job: Job<{
        workspaceId: string;
        subjectId: string;
        subjectType: string;
        requestType: string;
        requestedBy: string;
    }>): Promise<void>;
    handleDataAccessLogging(job: Job<{
        workspaceId: string;
        subjectId: string;
        subjectType: string;
        accessType: string;
        accessedBy?: string;
        accessedByName?: string;
        dataCategories: string[];
        purpose: string;
        legalBasis: string;
        ipAddress?: string;
        userAgent?: string;
    }>): Promise<void>;
    handleComplianceReportGeneration(job: Job<{
        workspaceId: string;
        reportType: string;
        periodStart: Date;
        periodEnd: Date;
        generatedBy: string;
    }>): Promise<void>;
    handleAuditDataCleanup(job: Job<{
        retentionPolicyId: string;
        dataType: string;
    }>): Promise<void>;
}
